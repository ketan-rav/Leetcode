Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.

A leaf is a node with no children.
Example 1:
Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
Output: true

            ->5
           /    \
       ->4        8
        /        /  \
     ->11        13    4
    /    \             \
  7     ->2             1
  
  5+4+11+2(root to leaf)=22 
  

class Solution {
public:
    bool check(TreeNode* root, int targetSum,int curr)
    {
        if(root==NULL)
            return false;
        if(!root->left && !root->right)
            if(targetSum==curr+root->val)
                return true;
            else
                return false;
        
            return check(root->left,targetSum,curr+root->val)||check(root->right,targetSum,curr+root->val);
        
        
    }
    
    
    bool hasPathSum(TreeNode* root, int targetSum) {
        int curr=0;;
        if(root==NULL)
            return false;
       
        else
        
            return check(root,targetSum,curr);
            
    }
    
};
